// Решить классическую задачу: имеется три стержня, перенести пирамиду из дисков с первого на третий, при этом не размещая больший диск поверх меньшего.
#include <iostream>
using namespace std;
int towers[100][3];
int discs;
void mover(int from, int to)
{
	int carry;
	for (int i = discs - 1; i >= 0; i--)
	{
		if (towers[i][from] != 0)
		{
			carry = towers[i][from];
			towers[i][from] = 0;
			for (int x = 0; x < discs; x++)
			{
				if (towers[x][to] == 0)
				{
					towers[x][to] = carry;
					break;
				}
			}
			break;
		}
	}
}
void couter()
{
	for (int i = discs-1; i >= 0; i--)
	{
		for (int j = 0; j < 3; j++)
		{
			cout << towers[i][j] << " ";
		}
		cout << endl;
	}
	cout << endl;
}
void solver(int disc, int start, int finish)
{
	if (disc > 0)
	{
		int tmp = 6 - start - finish;
		solver(disc - 1, start, tmp);
		mover(start-1, finish-1);
		couter();
		solver(disc - 1, tmp, finish);
	}
}
int main()
{
	setlocale(LC_ALL, "Russian");
	cout << "Введите количество дисков ";
	cin >> discs;
	int s = discs;
	for (int i = 0; i < discs; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			if (j == 0)
			{
				towers[i][j] = s;
				s--;
			}
			else towers[i][j] = 0;
		}
	}
	solver(discs, 1, 3);
	return 0;
}
/*
1) Ввод
Введите количество дисков 3
1) Вывод
0 0 0
2 0 0
3 0 1

0 0 0
0 0 0
3 2 1

0 0 0
0 1 0
3 2 0

0 0 0
0 1 0
0 2 3

0 0 0
0 0 0
1 2 3

0 0 0
0 0 2
1 0 3

0 0 1
0 0 2
0 0 3

2) Ввод
Введите количество дисков 4
2) Вывод
0 0 0
2 0 0
3 0 0
4 1 0

0 0 0
0 0 0
3 0 0
4 1 2

0 0 0
0 0 0
3 0 1
4 0 2

0 0 0
0 0 0
0 0 1
4 3 2

0 0 0
0 0 0
1 0 0
4 3 2

0 0 0
0 0 0
1 2 0
4 3 0

0 0 0
0 1 0
0 2 0
4 3 0

0 0 0
0 1 0
0 2 0
0 3 4

0 0 0
0 0 0
0 2 1
0 3 4

0 0 0
0 0 0
0 0 1
2 3 4

0 0 0
0 0 0
1 0 0
2 3 4

0 0 0
0 0 0
1 0 3
2 0 4

0 0 0
0 0 0
0 0 3
2 1 4

0 0 0
0 0 2
0 0 3
0 1 4

0 0 1
0 0 2
0 0 3
0 0 4

3) Ввод
Введите количество дисков 5
3) Вывод
0 0 0
2 0 0
3 0 0
4 0 0
5 0 1

0 0 0
0 0 0
3 0 0
4 0 0
5 2 1

0 0 0
0 0 0
3 0 0
4 1 0
5 2 0

0 0 0
0 0 0
0 0 0
4 1 0
5 2 3

0 0 0
0 0 0
1 0 0
4 0 0
5 2 3

0 0 0
0 0 0
1 0 0
4 0 2
5 0 3

0 0 0
0 0 0
0 0 1
4 0 2
5 0 3

0 0 0
0 0 0
0 0 1
0 0 2
5 4 3

0 0 0
0 0 0
0 0 0
0 1 2
5 4 3

0 0 0
0 0 0
0 0 0
2 1 0
5 4 3

0 0 0
0 0 0
1 0 0
2 0 0
5 4 3

0 0 0
0 0 0
1 0 0
2 3 0
5 4 0

0 0 0
0 0 0
0 0 0
2 3 0
5 4 1

0 0 0
0 0 0
0 2 0
0 3 0
5 4 1

0 0 0
0 1 0
0 2 0
0 3 0
5 4 0

0 0 0
0 1 0
0 2 0
0 3 0
0 4 5

0 0 0
0 0 0
0 2 0
0 3 0
1 4 5

0 0 0
0 0 0
0 0 0
0 3 2
1 4 5

0 0 0
0 0 0
0 0 1
0 3 2
0 4 5

0 0 0
0 0 0
0 0 1
0 0 2
3 4 5

0 0 0
0 0 0
0 0 0
0 1 2
3 4 5

0 0 0
0 0 0
0 0 0
2 1 0
3 4 5

0 0 0
0 0 0
1 0 0
2 0 0
3 4 5

0 0 0
0 0 0
1 0 0
2 0 4
3 0 5

0 0 0
0 0 0
0 0 1
2 0 4
3 0 5

0 0 0
0 0 0
0 0 1
0 0 4
3 2 5

0 0 0
0 0 0
0 0 0
0 1 4
3 2 5

0 0 0
0 0 0
0 0 3
0 1 4
0 2 5

0 0 0
0 0 0
0 0 3
0 0 4
1 2 5

0 0 0
0 0 2
0 0 3
0 0 4
1 0 5

0 0 1
0 0 2
0 0 3
0 0 4
0 0 5
*/