// Расставить 8 ферзей на шахматной доске так, чтобы они не били друг друга
#include <iostream>
using namespace std;
int board[8][8]; // 0 - нет ферзей, -1 ферзь, 1 - битое поле
void kingDel(int i, int j)
{
    for (int x = 0; x < 8; x++)
    {
        board[x][j]--; // Убрать Битые поля по вертикали
        board[i][x]--; // Убрать Битые поля по горизонтали
        int a; // Убрать Битые поля по диагонали
        a = j - i + x;
        if ((a >= 0) && (a < 8)) board[x][a]--;
        a = j + i - x;
        if ((a >= 0) && (a < 8)) board[x][a]--;
    }
    board[i][j] = 0; // Убрать ферзя
}

void kingPlace(int i, int j)
{
    for (int x = 0; x < 8; x++)
    {
        board[x][j]++; // Битые поля по вертикали
        board[i][x]++; // Битые поля по горизонтали
        int a; // Битые поля по диагонали
        a = j - i + x;
        if ((a >= 0) && (a < 8)) board[x][a]++;
        a = j + i - x;
        if ((a >= 0) && (a < 8)) board[x][a]++;
    }
    board[i][j] = -1; // Установка ферзя
}

bool tryToPlaceKings(int i) // Проверка и установка ферзя где возможно в i-том столбце
{
    bool kingPlaced = false;
    for (int j = 0; j < 8; j++)
    {
        if (board[i][j] == 0)
        {
            kingPlace(i, j);
            if (i == 7) kingPlaced = true; // Остановиться, если все ферзи установлены
            else
            {
                if (!(kingPlaced = tryToPlaceKings(i + 1))) kingDel(i,j); // Функция вызывает сама себя на следующий столбец и проверяет до последнего столбца, где можно поставить ферзя, и можно ли, если нельзя, то убирает только что установленного, если можно, то идет дальше, и так пока не расставит всех
            }
        }
        if (kingPlaced) break; // Если удалось установить ферзя, не мешая следующему столбцу, завершаем цикл для этого столбца
    }
    return kingPlaced;
}

int main()
{
    for (int i = 0; i < 8; i++) // Обнуление доски
    {
        for (int j = 0; j < 8; j++) board[i][j] = 0;
    }
    tryToPlaceKings(0);
    for (int i = 0; i < 8; i++)
    {
        for (int j = 0; j < 8; j++)
        {
            if (board[i][j] == -1) cout << "[K]";
            else cout << "[ ]";
        }
        cout << endl;
    }
    return 0;
}

/*
Вывод
[K][ ][ ][ ][ ][ ][ ][ ]
[ ][ ][ ][ ][K][ ][ ][ ]
[ ][ ][ ][ ][ ][ ][ ][K]
[ ][ ][ ][ ][ ][K][ ][ ]
[ ][ ][K][ ][ ][ ][ ][ ]
[ ][ ][ ][ ][ ][ ][K][ ]
[ ][K][ ][ ][ ][ ][ ][ ]
[ ][ ][ ][K][ ][ ][ ][ ]
*/